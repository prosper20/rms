name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch
      custom_message:
        description: "Custom release message (optional)"
        required: false
        type: string

permissions:
  contents: write
  packages: write

jobs:
  manual-release:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Make scripts executable
        run: chmod +x release.sh

      - name: Create Release
        run: |
          if [ -n "${{ github.event.inputs.custom_message }}" ]; then
            ./release.sh -v ${{ github.event.inputs.version_type }} -m "${{ github.event.inputs.custom_message }}"
          else
            ./release.sh -v ${{ github.event.inputs.version_type }}
          fi

  build-and-release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No test script defined. Skipping tests."

      - name: Build application
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep '^v' | sed -n '2p')
          if [ -z "$PREVIOUS_TAG" ]; then
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          CHANGELOG=$(git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..${{ steps.extract_version.outputs.tag }})
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.tag }}
          release_name: Release ${{ steps.extract_version.outputs.tag }}
          body: |
            ## Changes in ${{ steps.extract_version.outputs.tag }}

            ${{ steps.changelog.outputs.changelog }}

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.previous_tag.outputs.tag }}...${{ steps.extract_version.outputs.tag }}
          draft: false
          prerelease: false

  auto-release-check:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make scripts executable
        run: chmod +x auto-release.sh

      - name: Check for auto-release
        run: ./auto-release.sh -d

      - name: Comment on commits
        if: success()
        run: |
          echo "Auto-release analysis completed. Check the logs for version bump suggestions."
